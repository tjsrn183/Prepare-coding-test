// 해당문제는 sort함수의 compare함수를 사용하는 문제이다.
// 난 처음에 sort함수의 compare함수에 파라메터로 들어가는 a,b의 첫번째 인덱스부터 마지막까지 비교하려고 반복문을 세웠으나
// 두 파라메터의 길이가 다르므로 동등하게 비교하기가 힘들었다.
// 그래서 a,b 두개를 합쳐서 커지는순으로 비교함수를 세워서 
// sort함수를 완성하였다.
// 두번째 고난은 계속 11번 채점만 실패를 하였고 경험상 이런 경우는
// 알고리즘이 틀렸다니보단 예외로 딱하나 함정을 심어놓은듯한데 그게 [0,0,0]일때 0으로 출력이 되어야하는것이다.
// 도대체 이런 예외를 찾는사람은 어떤사람들인지 참신기하다
// 난 내가 코드를 짜면 그 예외를 찾는것이 무척이나 힘들다.

function solution(numbers) {
  
    const allZero=numbers.every(item=>item===0)
    if(allZero)return "0";
   numbers.sort((a, b) => {
        const num1 = a.toString();
        const num2 = b.toString();
 
        return (num2 + num1) - (num1 + num2);
    });
       
        
      
   
 
    return numbers.join('');
}
