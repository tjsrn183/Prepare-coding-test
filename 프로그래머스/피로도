//이 문제는 조건에 맞는 요소를 탐색하는것으로써 백트레킹 코드를 작성하면 되는 문제이다.
//완전탐색은 모든요소를 탐색하는데반해 백트레킹은 조건에 맞지않는다면 해당경로는 버리는 방법이다.
//dfs함수를 재귀적으로 호출하고 다시복구하는 방법을 통해 resultArr배열에 탐색한 요소의 인덱스를 삽입하고
//삽입한 요소의 최댓값을 answer로 반환해주었다.

function dfs(k,dungeons,visit,index,answer,resultArr){
 
    for(let a=0;a<dungeons.length;a++){
        if((!visit[a])&&(k>=dungeons[a][0])){   
            visit[a]=true;
            k-=dungeons[a][1];
         
            resultArr.push(answer+1);
           dfs(k,dungeons,visit,a+1,answer+1,resultArr);
            
            visit[a]=false;
            k+=dungeons[a][1];

        }
    }
   
    
}
function solution(k, dungeons) {
    var answer = 0;
    let index=0;
    const resultArr=[];
    const visit=Array(dungeons.length).fill(false);
    
    dfs(k,dungeons,visit,index,answer,resultArr);
  answer= Math.max(...resultArr);
    
    return answer;
}
