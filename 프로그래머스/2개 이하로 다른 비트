
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ첫번째 코드 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
function solution(numbers) {
    var answer = [];
    for(let item of numbers){
        let itemCopy = BigInt(item);
        let flag=false;
      
        let nextBin='';
    //    if(typeof itemCopy!=="number") 
        let itemBin=itemCopy.toString(2);
       
  //     
        //for(let a=0;a<20;a++)
         while(!flag){
             let count=0;
            ++itemCopy;
           
           nextBin=itemCopy.toString(2);
            let length=itemBin.length>nextBin.length?itemBin.length:nextBin.length;
            let iIndex=itemBin.length-1;
            let nIndex=nextBin.length-1;
            for(let a=length-1;a>=0;a--){
                if(count>=3) break;
               
                (itemBin[iIndex]||0)!==(nextBin[nIndex]||0)?++count:count;
                --iIndex;
                --nIndex;
            }
            if(count<=2) {
             
                    flag=true;
                    answer.push(itemCopy);
                    break;
                }
           
            
        }
       
    }
    return answer;
}
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ두번째 코드 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
function solution(numbers) {
    var answer = [];
    for(let item of numbers){
        
        let itemCopy = BigInt(item);
         let itemCopy2 = BigInt(item);
        let flag=false;
      
        let nextBin='';
 
        let itemBin=itemCopy.toString(2);
  
         while(!flag){
             let count=0;
            ++itemCopy;
           
           nextBin=itemCopy.toString(2);
         
               let resultBin=(itemCopy^itemCopy2).toString(2);
                count=resultBin.match(/1/g).length;
    
            if(count<=2) {
             
                    flag=true;
                    answer.push(itemCopy);
                    break;
                }
           
            
        }

    }
    return answer;
}

